# GitHub Bot Configuration for Terminal Coding Agent
# This file configures automated bot responses and actions

# Bot settings
bot:
  name: "Terminal Coding Agent Bot"
  username: "terminal-coding-agent-bot"
  avatar: "https://github.com/terminal-coding-agent.png"
  
# Comment templates
comments:
  welcome_newcomer: |
    ## Welcome to Terminal Coding Agent! üëã
    
    Thank you for your interest in contributing to our project! We're excited to have you on board.
    
    ### Getting Started
    1. **Read the documentation**: Check out our [CONTRIBUTING.md](CONTRIBUTING.md)
    2. **Set up your environment**: Follow the development setup instructions
    3. **Join the community**: Participate in discussions and ask questions
    4. **Start contributing**: Look for issues labeled `good first issue`
    
    ### Resources
    - [Contributing Guide](CONTRIBUTING.md)
    - [Code of Conduct](CODE_OF_CONDUCT.md)
    - [Security Policy](SECURITY.md)
    - [Project Roadmap](ROADMAP.md)
    
    ### Need Help?
    - Check existing issues and discussions
    - Ask questions in the comments
    - Join our community channels
    
    We're here to help you succeed! üöÄ

  pr_welcome: |
    ## Thank you for your contribution! üéâ
    
    We appreciate your effort to improve Terminal Coding Agent!
    
    ### What happens next?
    1. **Automated checks**: Our CI/CD pipeline will run tests and validations
    2. **Code review**: Maintainers will review your changes
    3. **Feedback**: We'll provide constructive feedback to help improve your contribution
    4. **Merge**: Once approved, your changes will be merged into the main branch
    
    ### Review Checklist
    - [ ] Code follows project style guidelines
    - [ ] Tests pass and coverage is maintained
    - [ ] Documentation is updated if needed
    - [ ] No breaking changes (or properly documented)
    - [ ] Security considerations addressed
    
    ### Need Help?
    - Check the [Contributing Guide](CONTRIBUTING.md)
    - Ask questions in the PR comments
    - Join our community discussions
    
    We'll review your PR as soon as possible! üöÄ

  issue_template_reminder: |
    ## Issue Template Reminder üìù
    
    It looks like this issue might not be following our issue templates. For better organization and faster resolution, please consider using our issue templates:
    
    - [Bug Report Template](.github/ISSUE_TEMPLATE/bug_report.md)
    - [Feature Request Template](.github/ISSUE_TEMPLATE/feature_request.md)
    - [Good First Issue Template](.github/ISSUE_TEMPLATE/good_first_issue.md)
    
    ### What to include:
    - Clear description of the issue or feature
    - Steps to reproduce (for bugs)
    - Expected vs actual behavior
    - Environment details
    - Additional context
    
    This helps maintainers understand and prioritize your issue more effectively! üéØ

  duplicate_issue: |
    ## Potential Duplicate Issue üîç
    
    This issue might be similar to existing ones:
    
    {similar_issues}
    
    Please review these issues to see if your concern is already being tracked. If so, please close this issue and add your information to the existing one.
    
    If this is a different issue, please add a comment explaining how it differs from the existing ones.

  large_pr: |
    ## Large Pull Request Detected üìè
    
    This PR is quite large with:
    - **{additions}** additions
    - **{deletions}** deletions  
    - **{changed_files}** changed files
    
    ### Recommendations
    - Consider breaking this into smaller, focused PRs
    - Ensure comprehensive testing
    - Provide detailed description of changes
    - Consider requesting additional reviewers
    
    ### Review Process
    Large PRs may take longer to review. Please be patient and responsive to feedback.

  merge_conflict: |
    ## Merge Conflict Detected ‚ö†Ô∏è
    
    This PR has merge conflicts that need to be resolved before it can be merged.
    
    ### How to resolve conflicts:
    1. **Update your branch**: `git fetch origin main`
    2. **Rebase or merge**: `git rebase origin/main` or `git merge origin/main`
    3. **Resolve conflicts**: Edit the conflicted files
    4. **Test your changes**: Ensure everything still works
    5. **Commit and push**: `git add . && git commit && git push`
    
    ### Need help?
    - Check our [Contributing Guide](CONTRIBUTING.md)
    - Ask questions in the PR comments
    - Join our community discussions
    
    Once conflicts are resolved, we'll continue the review process! üîß

  pr_merged: |
    ## Congratulations! üéâ
    
    @{author}, your pull request has been successfully merged! 
    
    ### What you've accomplished:
    - **{additions}** lines added
    - **{deletions}** lines removed
    - **{changed_files}** files changed
    
    ### Impact
    Your contribution helps improve Terminal Coding Agent for the entire community. Thank you for making the project better! üöÄ
    
    ### Next Steps
    - Consider contributing to other issues
    - Share your experience with the community
    - Stay updated with project developments
    
    **Merged on**: {merge_date}
    
    Keep up the great work! üëè

  security_reminder: |
    ## Security Considerations üîí
    
    This PR involves changes that may have security implications. Please ensure:
    
    - [ ] Input validation is implemented
    - [ ] Output encoding is applied
    - [ ] Authentication/authorization is properly handled
    - [ ] Sensitive data is protected
    - [ ] Error messages don't expose sensitive information
    - [ ] Dependencies are up to date and secure
    
    ### Security Resources
    - [Security Policy](SECURITY.md)
    - [OWASP Top 10](https://owasp.org/www-project-top-ten/)
    - [Secure Coding Practices](https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/)
    
    Thank you for helping keep our project secure! üõ°Ô∏è

  performance_reminder: |
    ## Performance Considerations ‚ö°
    
    This PR involves changes that may impact performance. Please consider:
    
    - [ ] Code complexity and efficiency
    - [ ] Memory usage and potential leaks
    - [ ] Database query optimization
    - [ ] Caching strategies
    - [ ] Asynchronous operations
    - [ ] Resource cleanup
    
    ### Performance Resources
    - [Python Performance Tips](https://wiki.python.org/moin/PythonSpeed/PerformanceTips)
    - [Profiling Tools](https://docs.python.org/3/library/profile.html)
    - [Memory Management](https://docs.python.org/3/library/gc.html)
    
    Let's keep Terminal Coding Agent fast and efficient! üöÄ

# Label configurations
labels:
  # Issue labels
  bug: "d73a4a"
  enhancement: "a2eeef"
  documentation: "0075ca"
  performance: "7057ff"
  security: "d93f0b"
  "good first issue": "7057ff"
  
  # Priority labels
  "priority: high": "d73a4a"
  "priority: medium": "fbca04"
  "priority: low": "0e8a16"
  
  # Status labels
  "needs-triage": "f9d0c4"
  "needs-review": "f9d0c4"
  "in-progress": "f9d0c4"
  "blocked": "d73a4a"
  
  # PR labels
  "needs-tests": "f9d0c4"
  "needs-docs": "f9d0c4"
  "needs-title-update": "f9d0c4"
  "needs-description": "f9d0c4"
  "breaking-change": "d73a4a"
  "large-pr": "7057ff"
  "medium-pr": "fbca04"
  "small-pr": "0e8a16"
  
  # Type labels
  "dependencies": "0366d6"
  "automated": "0366d6"
  "ci/cd": "0366d6"
  "infrastructure": "0366d6"

# Auto-assignment rules
auto_assignment:
  # Assign based on file changes
  file_patterns:
    "src/cli/*": ["cli-maintainer"]
    "src/core/*": ["core-maintainer"]
    "src/execution/*": ["execution-maintainer"]
    "tests/*": ["test-maintainer"]
    "docs/*": ["docs-maintainer"]
    ".github/*": ["infrastructure-maintainer"]
  
  # Assign based on labels
  label_patterns:
    "bug": ["bug-maintainer"]
    "security": ["security-maintainer"]
    "performance": ["performance-maintainer"]
    "documentation": ["docs-maintainer"]

# Notification settings
notifications:
  # Notify maintainers for specific events
  events:
    - "issue.opened"
    - "pull_request.opened"
    - "pull_request.ready_for_review"
    - "security_alert"
  
  # Notification channels
  channels:
    - "maintainers"
    - "security-team"
    - "infrastructure-team"

# Workflow triggers
triggers:
  # Issue triggers
  issue:
    - "opened"
    - "edited"
    - "labeled"
    - "unlabeled"
  
  # PR triggers
  pull_request:
    - "opened"
    - "edited"
    - "synchronize"
    - "reopened"
    - "closed"
    - "ready_for_review"
  
  # Review triggers
  pull_request_review:
    - "submitted"
    - "edited"
    - "dismissed"

# Bot behavior settings
behavior:
  # Comment frequency limits
  comment_limits:
    per_issue: 3
    per_pr: 5
    per_user_per_day: 10
  
  # Response delays (in seconds)
  response_delays:
    initial_response: 30
    follow_up: 300
    reminder: 86400  # 24 hours
  
  # Auto-close settings
  auto_close:
    enabled: true
    conditions:
      - "stale_issue_days": 30
      - "no_response_days": 14
      - "duplicate_issue": true
  
  # Auto-merge settings
  auto_merge:
    enabled: false
    conditions:
      - "all_checks_pass": true
      - "approved_reviews": 2
      - "no_conflicts": true
      - "small_pr": true

# Integration settings
integrations:
  # Code quality tools
  code_quality:
    - "sonarqube"
    - "codeclimate"
    - "codacy"
  
  # Security tools
  security:
    - "snyk"
    - "dependabot"
    - "codeql"
  
  # Performance tools
  performance:
    - "lighthouse"
    - "webpagetest"
    - "bundle-analyzer"

# Maintenance settings
maintenance:
  # Cleanup tasks
  cleanup:
    - "remove_stale_branches"
    - "archive_old_issues"
    - "update_dependencies"
    - "regenerate_docs"
  
  # Health checks
  health_checks:
    - "test_coverage"
    - "security_scan"
    - "performance_benchmark"
    - "dependency_audit"
  
  # Reporting
  reporting:
    - "weekly_summary"
    - "monthly_metrics"
    - "quarterly_review"
    - "annual_report"
