name: Pull Request Management

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, closed]
  pull_request_review:
    types: [submitted, edited, dismissed]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate PR
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const title = pr.title;
          const body = pr.body || '';
          const labels = [];
          
          // Check PR title format
          const titlePattern = /^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+/;
          if (!titlePattern.test(title)) {
            labels.push('needs-title-update');
          }
          
          // Check PR description
          if (body.length < 50) {
            labels.push('needs-description');
          }
          
          // Check for breaking changes
          if (body.includes('BREAKING CHANGE') || body.includes('breaking change')) {
            labels.push('breaking-change');
          }
          
          // Check for tests
          const files = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number
          });
          
          const hasTests = files.data.some(file => 
            file.filename.includes('test_') || 
            file.filename.includes('_test.py') ||
            file.filename.includes('tests/')
          );
          
          if (!hasTests && !title.includes('docs') && !title.includes('chore')) {
            labels.push('needs-tests');
          }
          
          // Check for documentation updates
          const hasDocs = files.data.some(file => 
            file.filename.includes('README') ||
            file.filename.includes('CONTRIBUTING') ||
            file.filename.includes('docs/') ||
            file.filename.endsWith('.md')
          );
          
          if (!hasDocs && (title.includes('feat') || title.includes('fix'))) {
            labels.push('needs-docs');
          }
          
          // Add default labels
          labels.push('needs-review');
          
          // Apply labels
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: labels
            });
          }

  pr-welcome:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
    - name: Welcome PR author
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const author = pr.user.login;
          
          // Check if author is a first-time contributor
          const { data: contributions } = await github.rest.repos.listContributors({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const isFirstTime = !contributions.some(contributor => contributor.login === author);
          
          let comment = `## Thank you for your contribution! 🎉
          
          @${author}, thank you for submitting this pull request. We appreciate your effort to improve Terminal Coding Agent!`;
          
          if (isFirstTime) {
            comment += `
            
            ### Welcome to the project! 👋
            This appears to be your first contribution to Terminal Coding Agent. We're excited to have you on board!
            
            ### What happens next?
            1. **Automated checks**: Our CI/CD pipeline will run tests and validations
            2. **Code review**: Maintainers will review your changes
            3. **Feedback**: We'll provide constructive feedback to help improve your contribution
            4. **Merge**: Once approved, your changes will be merged into the main branch
            
            ### Resources
            - [Contributing Guide](CONTRIBUTING.md)
            - [Code of Conduct](CODE_OF_CONDUCT.md)
            - [Pull Request Template](.github/pull_request_template.md)`;
          }
          
          comment += `
          
          ### Review Checklist
          - [ ] Code follows project style guidelines
          - [ ] Tests pass and coverage is maintained
          - [ ] Documentation is updated if needed
          - [ ] No breaking changes (or properly documented)
          - [ ] Security considerations addressed
          
          ### Need Help?
          - Check the [Contributing Guide](CONTRIBUTING.md)
          - Ask questions in the PR comments
          - Join our community discussions
          
          We'll review your PR as soon as possible! 🚀`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            body: comment
          });

  pr-size-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const changedFiles = pr.changed_files;
          
          let comment = '';
          let labels = [];
          
          // Check for large PRs
          if (additions > 1000 || deletions > 1000 || changedFiles > 20) {
            labels.push('large-pr');
            comment = `## Large Pull Request Detected 📏
            
            This PR is quite large with:
            - **${additions}** additions
            - **${deletions}** deletions  
            - **${changedFiles}** changed files
            
            ### Recommendations
            - Consider breaking this into smaller, focused PRs
            - Ensure comprehensive testing
            - Provide detailed description of changes
            - Consider requesting additional reviewers
            
            ### Review Process
            Large PRs may take longer to review. Please be patient and responsive to feedback.`;
          } else if (additions > 500 || deletions > 500 || changedFiles > 10) {
            labels.push('medium-pr');
            comment = `## Medium-sized Pull Request 📐
            
            This PR has:
            - **${additions}** additions
            - **${deletions}** deletions
            - **${changedFiles}** changed files
            
            Please ensure all changes are well-documented and tested.`;
          } else {
            labels.push('small-pr');
            comment = `## Small Pull Request 📝
            
            This PR has:
            - **${additions}** additions
            - **${deletions}** deletions
            - **${changedFiles}** changed files
            
            Great! Small, focused PRs are easier to review and merge.`;
          }
          
          // Apply labels
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: labels
            });
          }
          
          // Add comment
          if (comment) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
          }

  pr-conflict-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
    steps:
    - name: Check for merge conflicts
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          
          if (pr.mergeable_state === 'dirty') {
            const comment = `## Merge Conflict Detected ⚠️
            
            This PR has merge conflicts that need to be resolved before it can be merged.
            
            ### How to resolve conflicts:
            1. **Update your branch**: \`git fetch origin main\`
            2. **Rebase or merge**: \`git rebase origin/main\` or \`git merge origin/main\`
            3. **Resolve conflicts**: Edit the conflicted files
            4. **Test your changes**: Ensure everything still works
            5. **Commit and push**: \`git add . && git commit && git push\`
            
            ### Need help?
            - Check our [Contributing Guide](CONTRIBUTING.md)
            - Ask questions in the PR comments
            - Join our community discussions
            
            Once conflicts are resolved, we'll continue the review process! 🔧`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
          }

  pr-review-reminder:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
    - name: Schedule review reminder
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          
          // Schedule a reminder for maintainers after 3 days
          setTimeout(async () => {
            const { data: updatedPr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            if (updatedPr.state === 'open' && updatedPr.reviews.length === 0) {
              const comment = `## Review Reminder ⏰
              
              This PR has been open for 3 days without a review. Please consider:
              
              - [ ] Assigning a reviewer
              - [ ] Adding appropriate labels
              - [ ] Setting milestone if applicable
              - [ ] Providing initial feedback
              
              **PR opened**: ${new Date(pr.created_at).toLocaleDateString()}
              **Days open**: ${Math.floor((new Date() - new Date(pr.created_at)) / (1000 * 60 * 60 * 24))}
              
              Thank you for your contribution! 🙏`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: comment
              });
            }
          }, 3 * 24 * 60 * 60 * 1000); // 3 days

  pr-merge-celebration:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
    steps:
    - name: Celebrate merged PR
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const author = pr.user.login;
          
          const comment = `## Congratulations! 🎉
          
          @${author}, your pull request has been successfully merged! 
          
          ### What you've accomplished:
          - **${pr.additions}** lines added
          - **${pr.deletions}** lines removed
          - **${pr.changed_files}** files changed
          
          ### Impact
          Your contribution helps improve Terminal Coding Agent for the entire community. Thank you for making the project better! 🚀
          
          ### Next Steps
          - Consider contributing to other issues
          - Share your experience with the community
          - Stay updated with project developments
          
          **Merged on**: ${new Date(pr.merged_at).toLocaleDateString()}
          
          Keep up the great work! 👏`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            body: comment
          });
